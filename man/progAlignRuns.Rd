% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progressive_alignment.R
\name{progAlignRuns}
\alias{progAlignRuns}
\title{Peptide quantification through progressive alignment}
\usage{
progAlignRuns(
  dataPath,
  params,
  outFile = "DIAlignR",
  ropenms = NULL,
  oswMerged = TRUE,
  scoreFile = NULL,
  runs = NULL,
  peps = NULL,
  newickTree = NULL,
  applyFun = lapply
)
}
\arguments{
\item{dataPath}{(string) path to xics and osw directory.}

\item{params}{(list) parameters are entered as list. Output of the \code{\link{paramsDIAlignR}} function.}

\item{outFile}{(string) name of the output file.}

\item{ropenms}{(pyopenms module) get this python module through \code{\link{get_ropenms}}. Required only for chrom.mzML files.}

\item{oswMerged}{(logical) TRUE if merged file from pyprophet is used.}

\item{scoreFile}{(string) path to the peptide score file, needed when oswMerged is FALSE.}

\item{runs}{(string) names of xics file without extension.}

\item{peps}{(integer) ids of peptides to be aligned. If NULL, align all peptides.}

\item{newickTree}{(string) guidance tree in newick format. Look up \code{\link{getTree}}.}

\item{applyFun}{(function) value must be either lapply or BiocParallel::bplapply.}
}
\value{
(None)
}
\description{
This function expects osw and xics directories at dataPath. It first reads osw files and fetches
 chromatogram indices for each analyte. To perform alignment, first a crude guide-tree is built which
 can also be provided with newickTree parameter. As we traverse from the leaf-nodes to the root node,
 runs are aligned pairwise. The root node is named master1 that has average of all fragment ion chromatograms
 and identified peak-groups. These features are propagated back to leaf nodes and finally aligned
 features are written in the output file.
}
\examples{
dataPath <- system.file("extdata", package = "DIAlignR")
params <- paramsDIAlignR()
params[["context"]] <- "experiment-wide"
\dontrun{
ropenms <- get_ropenms(condaEnv = "envName")
progAlignRuns(dataPath, params = params, outFile = "test3", ropenms = ropenms)
# Removing aligned vectors
file.remove(list.files(dataPath, pattern = "*_av.rds", full.names = TRUE))
# Removing temporarily created master chromatograms
file.remove(list.files(file.path(dataPath, "xics"), pattern = "^master[A-Za-z0-9]+\\\\.chrom\\\\.sqMass$", full.names = TRUE))
file.remove(file.path(dataPath, "test3.temp.RData"))
file.remove(file.path(dataPath, "master.merged.osw"))
}
}
\seealso{
\code{\link{alignTargetedRuns}}
}
\author{
Shubham Gupta, \email{shubh.gupta@mail.utoronto.ca}

ORCID: 0000-0003-3500-8152

License: (c) Author (2020) + GPL-3
Date: 2020-07-10
}
