% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{getChildXICpp}
\alias{getChildXICpp}
\title{Get child chromatogram from two parent chromatogram}
\usage{
getChildXICpp(
  l1,
  l2,
  kernelLen,
  polyOrd,
  alignType,
  adaptiveRT,
  normalization,
  simType,
  Bp,
  goFactor = 0.125,
  geFactor = 40,
  cosAngleThresh = 0.3,
  OverlapAlignment = TRUE,
  dotProdThresh = 0.96,
  gapQuantile = 0.5,
  kerLen = 9L,
  hardConstrain = FALSE,
  samples4gradient = 100,
  wRef = 0.5,
  splineMethod = "natural",
  mergeStrategy = "avg",
  keepFlanks = TRUE
)
}
\arguments{
\item{l1}{(list) A list of numeric matrix of two columns. l1 and l2 should have same length.}

\item{l2}{(list) A list of numeric matrix of two columns. l1 and l2 should have same length.}

\item{kernelLen}{(integer) length of filter. Must be an odd number.}

\item{polyOrd}{(integer) TRUE: remove background from peak signal using estimated noise levels.}

\item{alignType}{(char) A character string. Available alignment methods are "global", "local" and "hybrid".}

\item{adaptiveRT}{(numeric) Similarity matrix is not penalized within adaptive RT.}

\item{normalization}{(char) A character string. Normalization must be selected from (L2, mean or none).}

\item{simType}{(char) A character string. Similarity type must be selected from (dotProductMasked, dotProduct, cosineAngle, cosine2Angle, euclideanDist, covariance, correlation, crossCorrelation).\cr
Mask = s > quantile(s, dotProdThresh)\cr
AllowDotProd= [Mask × cosine2Angle + (1 - Mask)] > cosAngleThresh\cr
s_new= s × AllowDotProd}

\item{Bp}{(numeric) Timepoint mapped by global fit for tA.}

\item{goFactor}{(numeric) Penalty for introducing first gap in alignment. This value is multiplied by base gap-penalty.}

\item{geFactor}{(numeric) Penalty for introducing subsequent gaps in alignment. This value is multiplied by base gap-penalty.}

\item{cosAngleThresh}{(numeric) In simType = dotProductMasked mode, angular similarity should be higher than cosAngleThresh otherwise similarity is forced to zero.}

\item{OverlapAlignment}{(logical) An input for alignment with free end-gaps. False: Global alignment, True: overlap alignment.}

\item{dotProdThresh}{(numeric) In simType = dotProductMasked mode, values in similarity matrix higher than dotProdThresh quantile are checked for angular similarity.}

\item{gapQuantile}{(numeric) Must be between 0 and 1. This is used to calculate base gap-penalty from similarity distribution.}

\item{kerLen}{(integer) In simType = crossCorrelation, length of the kernel used to sum similarity score. Must be an odd number.}

\item{hardConstrain}{(logical) if false; indices farther from noBeef distance are filled with distance from linear fit line.}

\item{samples4gradient}{(numeric) This parameter modulates penalization of masked indices.}

\item{wRef}{(numeric) Weight of the reference XIC. Must be between 0 and 1.}

\item{splineMethod}{(string) must be either "fmm" or "natural".}

\item{mergeStrategy}{(string) must be either ref, avg, refStart or refEnd.}

\item{keepFlanks}{(logical) TRUE: Flanking chromatogram is not removed.}
}
\value{
(List) of chromatograms and their aligned time vectors.
}
\description{
Get child chromatogram from two parent chromatogram
}
\examples{
data(XIC_QFNNTDIVLLEDFQK_3_DIAlignR, package="DIAlignR")
XICs <- XIC_QFNNTDIVLLEDFQK_3_DIAlignR
XICs.ref <- lapply(XICs[["hroest_K120809_Strep0\%PlasmaBiolRepl2_R04_SW_filt"]][["4618"]], as.matrix)
XICs.eXp <- lapply(XICs[["hroest_K120809_Strep10\%PlasmaBiolRepl2_R04_SW_filt"]][["4618"]], as.matrix)
Bp <- seq(4964.752, 5565.462, length.out = nrow(XICs.ref[[1]]))
chrom <- getChildXICpp(XICs.ref, XICs.eXp, 11L, 4L, alignType = "hybrid", adaptiveRT = 77.82315,
 normalization = "mean", simType = "dotProductMasked", Bp = Bp,
 goFactor = 0.125, geFactor = 40, cosAngleThresh = 0.3, OverlapAlignment = TRUE,
 dotProdThresh = 0.96, gapQuantile = 0.5, hardConstrain = FALSE, samples4gradient = 100,
 wRef = 0.5, keepFlanks= TRUE)
}
\author{
Shubham Gupta, \email{shubh.gupta@mail.utoronto.ca}
ORCID: 0000-0003-3500-8152
License: (c) Author (2021) + MIT
Date: 2021-01-08
}
